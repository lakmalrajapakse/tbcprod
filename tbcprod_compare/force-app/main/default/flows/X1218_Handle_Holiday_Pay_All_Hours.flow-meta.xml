<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>assign_record</name>
        <label>assign record</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>updatedAccount.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Child_Accounts.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updatedAccount.Holiday_Pay_All_Hours__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Holiday_Pay_All_Hours__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assign_to_collection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_record_2</name>
        <label>assign record 2</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>updatedAccount.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Child_Accounts.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updatedAccount.Holiday_Pay_All_Hours__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Parent.Holiday_Pay_All_Hours__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>assign_to_collection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assign_to_collection</name>
        <label>assign to collection</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>childAccounts</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>updatedAccount</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Child_Accounts</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_If_Children_Exist</name>
        <label>Check If Children Exist</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Has_Children</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>childAccounts</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>update_child_accounts</targetReference>
            </connector>
            <label>Has Children</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_parent_changed</name>
        <label>Check if parent changed</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>hasParentChanged</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.ParentId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.ParentId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_account_children</targetReference>
            </connector>
            <label>hasParentChanged</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Parent_exist</name>
        <label>Check if Parent exist</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>assign_record</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Parent_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assign_record_2</targetReference>
            </connector>
            <label>Parent Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Handler_Holiday_Pay_All_Hours</name>
        <label>Handler Holiday Pay All Hours</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>get_account_children</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>hasParent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_to_Parents_Holiday_Pay</targetReference>
            </connector>
            <label>hasParent</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>1218 - Handle Holiday Pay All Hours {!$Flow.CurrentDateTime}</interviewLabel>
    <label>1218 - Handle Holiday Pay All Hours</label>
    <loops>
        <name>Loop_Child_Accounts</name>
        <label>Loop Child Accounts</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>get_account_children</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_if_Parent_exist</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Check_If_Children_Exist</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>get_account_children</name>
        <label>get account children</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Child_Accounts</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Grant_Parent_Id__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Account</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Holiday_Pay_All_Hours__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>update_child_accounts</name>
        <label>update child accounts</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <inputReference>childAccounts</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_to_Parents_Holiday_Pay</name>
        <label>Update to Parents Holiday Pay</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_if_parent_changed</targetReference>
        </connector>
        <inputAssignments>
            <field>Holiday_Pay_All_Hours__c</field>
            <value>
                <elementReference>$Record.Parent.Holiday_Pay_All_Hours__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Handler_Holiday_Pay_All_Hours</targetReference>
        </connector>
        <filterFormula>OR(IsNew(),IsChanged({!$Record.Holiday_Pay_All_Hours__c}),IsChanged({!$Record.ParentId}))</filterFormula>
        <object>Account</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>childAccountIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>childAccounts</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>updatedAccount</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
</Flow>
